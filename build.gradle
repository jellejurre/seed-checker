plugins {
    id 'fabric-loom' version '0.10-SNAPSHOT'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

repositories {
    maven {url "https://jitpack.io"}
    mavenLocal()
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group
def ENV = System.getenv()

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:1.18.1"
    mappings "com.github.jellejurre:yarn:1156d87670"
    modImplementation "net.fabricmc:fabric-loader:0.12.12"

    testImplementation(platform('org.junit:junit-bom:5.7.2'))
    testImplementation('org.junit.jupiter:junit-jupiter')
    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
        duplicatesStrategy DuplicatesStrategy.INCLUDE
    }
}
// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
    manifest.attributes(
            'Multi-Release': 'true'
    )
}

shadowJar {
    transform(Log4j2PluginsCacheFileTransformer)
    dependsOn remapJar
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
import com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer

// configure the maven publication
publishing {
    publications {
        shadow(MavenPublication) {
            artifactId = archivesBaseName
            version = version
            groupId = group
//            artifact(remapJar) {
//                builtBy jar
//            }
//            artifact(sourcesJar) {
//                builtBy sourcesJar
//            }
            artifact(tasks["shadowJar"]){
                classifier=""
            }
      }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish it to github packages instead
        /*maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/jellejurre/seed-checker"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }*/

        // uncomment to publish to local maven
        //mavenLocal()

        if (ENV.MAVEN_URL) {
            maven {
                url ENV.MAVEN_URL
                credentials {
                    username ENV.MAVEN_USERNAME
                    password ENV.MAVEN_PASSWORD
                }
            }
        }
    }
}

test {
    useJUnitPlatform()
}